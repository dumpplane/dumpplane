[nginx]
conf.location = ${replacement.blank}location ${replacement.uri} {
        ${replacement.blank}${replacement.blank}set $service "${replacement.service}";
        ${replacement.blank}${replacement.blank}proxy_connect_timeout 60s;
        ${replacement.blank}${replacement.blank}proxy_read_timeout 60s;
        ${replacement.blank}${replacement.blank}proxy_send_timeout 60s;
        ${replacement.blank}${replacement.blank}client_max_body_size 10m;
        ${replacement.blank}${replacement.blank}proxy_buffering on;
        ${replacement.blank}${replacement.blank}proxy_http_version 1.1;
        ${replacement.blank}${replacement.blank}set $default_connection_header close;
        ${replacement.blank}${replacement.blank}proxy_set_header Upgrade $http_upgrade;
        ${replacement.blank}${replacement.blank}proxy_set_header Connection $vs_connection_header;
        ${replacement.blank}${replacement.blank}proxy_pass_request_headers on;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Real-IP $remote_addr;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Forwarded-Host $host;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Forwarded-Port $server_port;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Forwarded-Proto $scheme;
        ${replacement.blank}${replacement.blank}proxy_set_header Host "$host";
        ${replacement.blank}${replacement.blank}proxy_pass http://${replacement.proxy_pass}
        ${replacement.blank}${replacement.blank}proxy_next_upstream error timeout;
        ${replacement.blank}${replacement.blank}proxy_next_upstream_timeout 0s;
        ${replacement.blank}${replacement.blank}proxy_next_upstream_tries 0;
    ${replacement.blank}}
conf.location.no.ws = ${replacement.blank}location ${replacement.uri} {
        ${replacement.blank}${replacement.blank}set $service "${replacement.service}";
        ${replacement.blank}${replacement.blank}proxy_connect_timeout 60s;
        ${replacement.blank}${replacement.blank}proxy_read_timeout 60s;
        ${replacement.blank}${replacement.blank}proxy_send_timeout 60s;
        ${replacement.blank}${replacement.blank}client_max_body_size 10m;
        ${replacement.blank}${replacement.blank}proxy_buffering on;
        ${replacement.blank}${replacement.blank}proxy_http_version 1.1;
        ${replacement.blank}${replacement.blank}proxy_pass_request_headers on;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Real-IP $remote_addr;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Forwarded-Host $host;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Forwarded-Port $server_port;
        ${replacement.blank}${replacement.blank}proxy_set_header X-Forwarded-Proto $scheme;
        ${replacement.blank}${replacement.blank}proxy_set_header Host "$host";
        ${replacement.blank}${replacement.blank}proxy_pass http://${replacement.proxy_pass};
        ${replacement.blank}${replacement.blank}proxy_next_upstream error timeout;
        ${replacement.blank}${replacement.blank}proxy_next_upstream_timeout 0s;
        ${replacement.blank}${replacement.blank}proxy_next_upstream_tries 0;
    ${replacement.blank}}
conf.upstream.server = ${replacement.blank}server ${replacement.endpoint} max_fails=1 fail_timeout=10s max_conns=0;
conf.upstream = upstream ${replacement.proxy_pass} {
    ${replacement.blank}zone ${replacement.proxy_pass} 512k;
    ${replacement.blank}random two least_conn;
    ${replacement.upstream.servers}
    }
conf.server = server {
    ${replacement.blank}listen ${replacement.server.port};
    ${replacement.blank}listen [::]:${replacement.server.port};
    ${replacement.blank}server_name ${replacement.server.host};
    ${replacement.blank}status_zone ${replacement.server.zone};
    ${replacement.blank}set $resource_type "${replacement.resource_type}";
    ${replacement.blank}set $resource_name "${replacement.resource_name}";
    ${replacement.blank}set $resource_namespace "${replacement.resource_namespace}";
    ${replacement.blank}server_tokens "off";
    ${replacement.blank}if ($enableSeclimit = "1") {
            ${replacement.blank}${replacement.blank}return 403;
    ${replacement.blank}}
    ${replacement.locations}
    }
conf.server.api = server {
        ${replacement.blank}listen 8001;
        ${replacement.blank}listen [::]:8001;
        ${replacement.blank}root /usr/share/nginx/html;
        ${replacement.blank}access_log off;
        ${replacement.blank}location  = /dashboard.html {
        ${replacement.blank}}
        ${replacement.blank}allow 0.0.0.0/0;
        ${replacement.blank}deny all;
        ${replacement.blank}location /api {
            ${replacement.blank}${replacement.blank}api write=on;
        ${replacement.blank}}
    }
